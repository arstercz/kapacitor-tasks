dbrp "hostmonitor"."autogen"
var period_time = 2m
var every_time  = 1m
var warn_value  = 20
var crit_value  = 50

var proc_data = stream
   |from()
    .measurement('processes')
    .groupBy('dc', 'host')
   |window()
    .period(period_time)
    .every(every_time)
    .align()

var run_data = proc_data
   |mean('running')
     .as('value')

var total_data = proc_data
   |mean('total')
     .as('value')

var total_thread = proc_data
   |mean('total_threads')
     .as('value')

run_data
   |join(total_data, total_thread)
     .as('jrun', 'jto', 'jtot')
   |alert()
      .id('{{ .TaskName }}-process status')
      .details('''
Time: {{ .Time.Local.Format "2006-01-02T15:04:05Z07:00" }}<br>Host: {{ index .Tags "host" }}<br>Id: {{ .ID }}<br>Duration: {{ .Duration }}<br>Message: {{ .Message }}
''')
      .message('{{ .Level}}: {{ index .Tags "dc" }}/{{ index .Tags "host" }}/process status - running: {{ index .Fields "jrun.value" | printf "%0.2f" }}, total: {{ index .Fields "jto.value" | printf "%0.2f" }}, total_threads: {{ index .Fields "jtot.value" | printf "%0.2f" }}')
      .warn(lambda: "jrun.value" > warn_value) 
      .crit(lambda: "jrun.value" > crit_value OR "jtot.value" > int(crit_value * 50)) 
      .exec('/usr/local/bin/kap-exec', '--conf', '/etc/kapalarm/kap.conf')
