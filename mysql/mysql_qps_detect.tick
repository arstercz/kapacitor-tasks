dbrp "hostmonitor"."autogen"
var period_time = 5m
var every_time  = 1m
var warn_value = 1000
var crit_value = 5000

// all read, write unit is iops
var mysql_data = batch
   |query('''
       SELECT non_negative_derivative("com_select") + non_negative_derivative("com_update") + non_negative_derivative("com_update_multi") + non_negative_derivative("com_insert") + non_negative_derivative("com_insert_select") + non_negative_derivative("com_replace") + non_negative_derivative("com_replace_select") + non_negative_derivative("com_delete") + non_negative_derivative("com_delete_multi") + non_negative_derivative("com_begin") + non_negative_derivative("com_commit") + non_negative_derivative("com_rollback") + non_negative_derivative("com_show_status") + non_negative_derivative("com_show_variables") + non_negative_derivative("com_stmt_execute") as com_qps
       FROM "hostmonitor"."autogen"."mysql"
     ''')
     .groupBy('dc', 'host', 'name')
     .period(period_time)
     .every(every_time)
     .align()
   |eval(lambda: sigma("com_qps"))
      .as('sigma')
      .keep()
   |alert()
      .id('{{ .TaskName }}-mysql qps')
      .details('''
Time: {{ .Time.Local.Format "2006-01-02T15:04:05Z07:00" }}<br>Id: {{ .ID }}<br>Duration: {{ .Duration }}<br>Message: {{ .Message }}
''')
      .message('{{ .Level }}: {{ index .Tags "dc" }}/{{ index .Tags "host" }}/{{ index .Tags "server" }}/diskio - qps: {{ index .Fields "qps" | printf "%0.2f" }}iops, sigma: {{ index .Fields "sigma" }}')
      .warn(lambda: "sigma" > warn_value) 
      .crit(lambda: "sigma" > crit_value) 
      .exec('/usr/local/bin/kap-exec', '--conf', '/etc/kapalarm/kap.conf')
